System configuration tool
==================================

.. rubric:: Introduction
   :name: introduction-linux-sysconf-utility

SysConfig is a configuration tool designed to simplify hardware and software 
configuration challenges to accelerate software development.

SysConfig is available as part of the Code Composer Studio™ integrated development 
environment as well as a standalone application. Additionally SysConfig can be run in the cloud by 
visiting the  `TI developer zone
<https://dev.ti.com/sysconfig/>`__ .

SysConfig provides an intuitive graphical user interface for configuring pins, 
peripherals, radios, software stacks, RTOS, clock tree and other components. 

SysConfig will automatically detect, expose and resolve conflicts to speed software development.

.. rubric:: Features
   :name: features

The features available vary by the device and software development kit used.

 * Pin mux
 * Peripheral/driver configuration
 * Software stack configuration
 * Clock tree configuration
 * Memory configuration
 * RTOS configuration
 * Automatic code generation
 * Device- and board-level views
 * Contextual documentation
 * Real-time code preview


.. rubric:: Disclaimer
   :name: disclaimer

**NOTE:** Although these utilities are tested and intended to be
accurate, they are provided ‘as is’ and are not guaranteed to provide
accurate results. In the event of a conflict between the device data
contained in this software tool and the device datasheet, the datasheet
shall take precedence. Please check configuration results against the
datasheet for your device to be assured your sysconfig tool is
*possible* and accurate. It is up to the user to verify all of the bits
in the registers based on the information in the device datasheet and
that all IOSETs selected by the tool are valid and supported. Although
we try to maintain backwards compatibility between Sysconfig Tool versions
it isn't guarunteed.

.. rubric:: Software User's Guide
   :name: software-users-guide

A quick overview of the TI Sysconfig Tool and usage is available on
the main `Sysconfig Tool
<https://ti.com/tool/SYSCONFIG>`__.

.. rubric:: Release
   :name: release

Please refer for latest sysconfig tool
`Sysconfig Release
<https://ti.com/tool/SYSCONFIG#downloads>`__.

.. rubric:: Application Launch
   :name: application-launch

At launch the tool will present the option to start a new design or to
open an existing design. To start a new design use the drop-down menu
indicating which devices are supported by this installation of the
Sysconf Tool. Select your device and click **Start**. Previously saved
designs can be opened too. Although we try to maintain backwards
compatibility between Sysconf Tool versions, it isn't guaranteed.


.. rubric:: Output File Formats
   :name: output-file-formats

Code files generated by the Sysconfig tool  vary by each device and its
requirements. For Linux generally include a partial devicetree format is 
generated for Processor SDK Linux and that should be manually patched into the
reference devicetree file included with the `Linux
kernel  <../../Foundational_Components_Kernel_Users_Guide.html>`__.

Some devices will have a generic format that is intended for use with
:ref:`U-Boot <u-boot-user-guide>`.
These devices require pin multiplexing to be done once, in isolation,
and while executing from SRAM.



.. rubric:: Processor SDK Linux
   :name: processor-sdk-linux

Recompiling u-boot is required after making updates. Instructions are
available in the :ref:`Linux Core U-Boot User's Guide <u-boot-user-guide>`.
Compiling the devicetree dts to dtb is also required after making
updates. Instructions are available in the `Linux Kernel Users
Guide <../../Foundational_Components_Kernel_Users_Guide.html#compiling-the-sources>`__.

.. rubric:: devicetree
   :name: devicetree

Edit the appropriate file in this directory:

.. ifconfig:: CONFIG_part_family in ('J7_family')

    ${SDK\_INSTALL\_DIR}\\board\_support\\linux-\*\\arch\\arm64\\boot\\dts\\${BOARD}.dts


